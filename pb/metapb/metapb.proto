syntax = "proto3";
package metapb;

import "gogoproto/gogo.proto";

import "configpb/configpb.proto";
import "errorpb/errorpb.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

message GetLatestTermReq {
    configpb.NodeAddress address = 1 [(gogoproto.nullable) = false];
}

message GetLatestTermResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
    errorpb.Error error = 2;
}

message JoinReq {
    configpb.NodeAddress address = 1 [(gogoproto.nullable) = false];
}

message JoinResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
}

message NeedSplitReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
}

message NeedSplitResp {
    repeated configpb.NodeAddress new_node = 1 [(gogoproto.nullable) = false];
}

message DoSplitReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
    bytes split_key = 2;
}

message DoSplitResp {
    errorpb.Error error = 1 [(gogoproto.nullable) = false];
}

enum ConfChangeType {
    ADD_SECONDARY = 0;
    REMOVE_SECONDARY = 1;
    CHANGE_PRIMARY = 2;
}

message ConfChangeReq {
    configpb.GroupInfo new_group_info = 2 [(gogoproto.nullable) = false];
    ConfChangeType type = 3;
}

message ConfChangeResp {
    configpb.GroupInfo new_group_info = 2 [(gogoproto.nullable) = false];
}

message QueryLocationReq {
    bytes key = 1;
}

message QueryLocationResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
}

service MetaService {
    rpc GetLatestTerm(GetLatestTermReq) returns (GetLatestTermResp);
    rpc Join(JoinReq) returns (JoinResp);
    rpc NeedSplit(NeedSplitReq) returns (NeedSplitResp);
    rpc DoSplit(DoSplitReq) returns (DoSplitResp);
    rpc ConfChange(ConfChangeReq) returns (ConfChangeResp);
    rpc QueryLocation(QueryLocationReq) returns (QueryLocationResp);
}
