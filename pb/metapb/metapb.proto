syntax = "proto3";
package metapb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "github.com/choleraehyq/asuka/pb/configpb/configpb.proto";
import "github.com/choleraehyq/asuka/pb/errorpb/errorpb.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

message GetLatestTermReq {
    string address = 1;
    configpb.ConfigNo configno = 2 [(gogoproto.nullable) = false];
}

message GetLatestTermResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
    errorpb.Error error = 2;
}

message CreateGroupReq {
    string group_id = 1;
}

message CreateGroupResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
}

message JoinReq {
    string address = 1;
}

message JoinResp {}

message HeartbeatReq {
    string addr = 1;
}

message HeartbeatResp {}

message QueryLocationReq {
    string group_name = 1;
}

message QueryLocationResp {
    configpb.GroupInfo group_info = 1 [(gogoproto.nullable) = false];
}

message UpgradeLearnerReq {
    string addr = 1;
    configpb.ConfigNo config_no = 2;
}

message UpgradeLearnerResp {}

service MetaService {
    rpc GetLatestTerm(GetLatestTermReq) returns (GetLatestTermResp);
    rpc CreateGroup(CreateGroupReq) returns (CreateGroupResp);
    rpc Join(JoinReq) returns (JoinResp);
    rpc Heartbeat(HeartbeatReq) returns (HeartbeatResp);
    rpc QueryLocation(QueryLocationReq) returns (QueryLocationResp);
    rpc UpgradeLearner(UpgradeLearnerReq) returns (UpgradeLearnerResp);
}
