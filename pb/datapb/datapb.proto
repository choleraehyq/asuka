syntax = "proto3";

package datapb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/choleraehyq/asuka/pb/configpb/configpb.proto";
import "github.com/choleraehyq/asuka/pb/errorpb/errorpb.proto";
import "github.com/choleraehyq/asuka/pb/storagepb/storagepb.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

message GetReq {
    string group_id = 1;
    bytes key = 2;
}

message GetResp {
    bytes value = 1;
    errorpb.Error error = 2;
}

message SetReq {
    string group_id = 1;
    storagepb.KVPair pair = 2 [(gogoproto.nullable) = false];
}

message SetResp {
    errorpb.Error error = 1;
}

message Log {
    storagepb.KVPair kv = 1;
}

message AppendLogReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
    uint64 sn = 2;
    Log log = 3;
    uint64 commit_sn = 4;
}

message AppendLogResp {
    uint64 sn = 3;
    errorpb.Error error = 100;
}

message GetLatestSnapshotReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
}

message GetLatestSnapshotResp {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
    storagepb.Snapshot snapshot = 2;
    errorpb.Error error = 100;
}

message GetLogReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
    uint64 sn = 2;
}

message GetLogResp {
    uint64 prepare_sn = 1;
    uint64 commit_sn = 2;
    uint64 sn = 3;
    Log log = 4;
    errorpb.Error error = 5;
}

// the reason causes this group change
enum GroupChangeType {
    // change self to learner or secondary; use CHANGE_TO_PRIMARY when changing to primary
    // other replica info may also change
    CHANGE_NODE = 0;
    // create new replica group
    CREATE_GROUP = 1;
    // join an existing group as learner
    ADD_TO_GROUP = 2;
    // delete self from an existing group
    // currently not used
    REMOVE_FROM_GROUP = 3;
    // change self to primary replica
    CHANGE_TO_PRIMARY = 4;
}

message GroupChangeReq {
    configpb.GroupInfo group_info = 1;
    GroupChangeType reason = 2;
}

message GroupChangeResp {
    errorpb.Error error = 2;
}

message MetaServerChangeReq {
    string primary = 1;
    repeated string new_meta_list = 2;
}

message MetaServerChangeResp {
    repeated string new_meta_list = 1;
    errorpb.Error error = 2;
}

message ReconcileReq {
    configpb.ConfigNo group_no = 1 [(gogoproto.nullable) = false];
    uint64 sn = 2;
}

message ReconcileResp {
    errorpb.Error error = 2;
}

service DataService {
    rpc Get(GetReq) returns (GetResp);
    rpc Set(SetReq) returns (SetResp);
    rpc AppendLog(AppendLogReq) returns (AppendLogResp);
    rpc GetLatestSnapshot(GetLatestSnapshotReq) returns (GetLatestSnapshotResp);
    rpc GetLog(GetLogReq) returns (GetLogResp);
    rpc GroupChange(GroupChangeReq) returns (GroupChangeResp);
    rpc MetaServerChange(MetaServerChangeReq) returns (MetaServerChangeResp);
    rpc Reconcile(ReconcileReq) returns (ReconcileResp);
}
